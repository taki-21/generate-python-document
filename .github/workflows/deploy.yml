name: python-wrapper

on: [push]

env:
  PIP_CACHE_DIR: /tmp/cache/pip_python_wrapper
  AWS_REGION: ap-northeast-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
  AWS_ROLE_ARN: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/SwitchRoleForTest01

  BUCKET_NAME: s-cloudfront-oai-bucket

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-python-cache-${{ hashFiles('./pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-cache-


      - name: Build the docker-compose
        run: docker-compose up -d python-wrapper

      - name: python-wrapper install modules
        run: |
          docker exec python_wrapper /bin/bash -c "poetry install"
          docker exec python_wrapper /bin/bash -c "chmod -R 755 /root/.cache/"

      - name: Make base files
        run: docker exec python_wrapper poetry run sphinx-apidoc -F -H python-wrapper -o docs pythonwrapper

      - name: Copy conf file
        run: docker exec python_wrapper /bin/bash -c "cp docs.conf.dev docs/conf.py"

      - name: Build docs
        run: docker exec python_wrapper poetry run sphinx-build docs docs/_build

      - name: Upload HTML to S3
        run: aws s3 cp ./docs/_build/ s3://${{ env.BUCKET_NAME }} --recursive
